#ifndef BSP_ADC_USER_H
#define BSP_ADC_USER_H

#include "bsp.h"

typedef enum
{
    BSP_ADC_USER_ADC_1,
    BSP_ADC_USER_ADC_MAX
} BspAdcUser_Adc_t;

typedef enum
{
    BSP_ADC_USER_CHANNEL_RANK_1,
    BSP_ADC_USER_CHANNEL_RANK_2,
    BSP_ADC_USER_CHANNEL_RANK_3,
    BSP_ADC_USER_CHANNEL_RANK_4,
    BSP_ADC_USER_CHANNEL_RANK_5,
    BSP_ADC_USER_CHANNEL_RANK_6,
    BSP_ADC_USER_CHANNEL_RANK_7,
    BSP_ADC_USER_CHANNEL_RANK_8,
    BSP_ADC_USER_CHANNEL_RANK_9,
    BSP_ADC_USER_CHANNEL_RANK_10,
    BSP_ADC_USER_CHANNEL_RANK_11,
    BSP_ADC_USER_CHANNEL_RANK_12,
    BSP_ADC_USER_CHANNEL_RANK_13,
    BSP_ADC_USER_CHANNEL_RANK_14,
    BSP_ADC_USER_CHANNEL_RANK_15,
    BSP_ADC_USER_CHANNEL_RANK_16,
    BSP_ADC_USER_CHANNEL_RANK_MAX
} BspAdcUser_ChannelRank_t;

extern Bsp_Adc_t BspAdcUser_HandleTable[BSP_ADC_USER_ADC_MAX];

Bsp_Adc_t* BspAdcUser_GetAdc(const Bsp_AdcHandle_t *const adc_handle);

#endif /* BSP_ADC_USER_H */